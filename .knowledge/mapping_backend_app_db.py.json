{"is_source_file": true, "format": "Python", "description": "This file manages MongoDB database connections within a Flask web application, providing functions to obtain a MongoDB client, access the database, and handle cleanup of resources.", "external_files": ["pymongo", "flask", ".config"], "external_methods": ["pymongo.MongoClient", "pymongo.errors.PyMongoError", "flask.current_app", "flask.g", "load_mongo_config"], "published": [], "classes": [], "methods": [{"name": "MongoClient get_mongo_client()", "description": "Provides a MongoDB client instance, creating and caching it within the Flask 'g' context if necessary.", "scope": "", "scopeKind": ""}, {"name": "get_db()", "description": "Returns a handle to the configured MongoDB database using the cached client.", "scope": "", "scopeKind": ""}, {"name": "teardown_mongo_client(exception=None)", "description": "Cleans up the MongoDB client from the Flask 'g' context, closing the connection if it exists.", "scope": "", "scopeKind": ""}], "calls": ["load_mongo_config", "MongoClient", "g.pop", "client.close"], "search-terms": ["get_mongo_client", "MongoClient", "load_mongo_config", "teardown_mongo_client", "flask g", "MongoDB connection management"], "state": 2, "file_id": 9, "knowledge_revision": 19, "git_revision": "", "ctags": [{"_type": "tag", "name": "get_db", "path": "/home/kavia/workspace/code-generation/vendor-parameter-mapper-185-196/mapping_backend/app/db.py", "pattern": "/^def get_db():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_mongo_client", "path": "/home/kavia/workspace/code-generation/vendor-parameter-mapper-185-196/mapping_backend/app/db.py", "pattern": "/^def get_mongo_client() -> MongoClient:$/", "language": "Python", "typeref": "typename:MongoClient", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "teardown_mongo_client", "path": "/home/kavia/workspace/code-generation/vendor-parameter-mapper-185-196/mapping_backend/app/db.py", "pattern": "/^def teardown_mongo_client(exception=None):$/", "language": "Python", "kind": "function", "signature": "(exception=None)"}], "hash": "deb31d5daa2f703e2f5dfd3c0eb2c9a6", "format-version": 4, "code-base-name": "mapping_backend", "filename": "mapping_backend/app/db.py", "revision_history": [{"19": ""}]}