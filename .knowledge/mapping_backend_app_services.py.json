{"is_source_file": true, "format": "Python", "description": "This file contains service functions for vendor management, mapping management, history tracking, and query resolution in a backend application, utilizing MongoDB as the data store.", "external_files": [".db", ".errors"], "external_methods": ["get_db", "NotFoundError", "ConflictError", "ValidationError"], "published": ["list_vendors", "create_vendor", "get_vendor", "update_vendor", "delete_vendor", "list_mappings", "create_mapping", "get_mapping", "update_mapping", "delete_mapping", "list_history", "resolve_mapping"], "classes": [], "methods": [{"name": "ObjectId _oid(oid_str: str)", "description": "Converts a string ID to a MongoDB ObjectId, raising ValidationError if invalid.", "scope": "", "scopeKind": ""}, {"name": "List[Dict] list_vendors()", "description": "Retrieves and returns a list of all vendors, sorted by name.", "scope": "", "scopeKind": ""}, {"name": "Dict create_vendor(data: Dict)", "description": "Creates a new vendor document in the database after validating uniqueness of the code.", "scope": "", "scopeKind": ""}, {"name": "Dict get_vendor(vendor_id: str)", "description": "Fetches a vendor by its ID; raises NotFoundError if not found.", "scope": "", "scopeKind": ""}, {"name": "Dict update_vendor(vendor_id: str, data: Dict)", "description": "Updates an existing vendor with provided data; returns current data if no updates provided.", "scope": "", "scopeKind": ""}, {"name": "None delete_vendor(vendor_id: str)", "description": "Deletes a vendor and associated mappings and history, raises NotFoundError if vendor does not exist.", "scope": "", "scopeKind": ""}, {"name": "Dict _vendor_to_dict(doc: Dict)", "description": "Converts a vendor document to a dictionary for external use.", "scope": "", "scopeKind": ""}, {"name": "List[Dict] list_mappings(vendor_id: Optional[str] = None, namespace: Optional[str] = None)", "description": "Retrieves and returns mappings filtered by optional vendor ID and namespace.", "scope": "", "scopeKind": ""}, {"name": "Dict create_mapping(data: Dict)", "description": "Creates a new mapping for a vendor with rules, ensuring no duplicate namespace for the same vendor.", "scope": "", "scopeKind": ""}, {"name": "Dict get_mapping(mapping_id: str)", "description": "Fetches a mapping by ID; raises NotFoundError if not found.", "scope": "", "scopeKind": ""}, {"name": "Dict update_mapping(mapping_id: str, data: Dict)", "description": "Updates existing mapping properties, increments version, and records history.", "scope": "", "scopeKind": ""}, {"name": "None delete_mapping(mapping_id: str)", "description": "Deletes a mapping and records the deletion in history; raises NotFoundError if not found.", "scope": "", "scopeKind": ""}, {"name": "Dict _mapping_to_dict(doc: Dict)", "description": "Converts a mapping document to a dictionary format for output.", "scope": "", "scopeKind": ""}, {"name": "_record_history(mapping_doc: Dict, change_type: str, db=None)", "description": "Records a change event for a mapping, storing change type, version, timestamp, and diff.", "scope": "", "scopeKind": ""}, {"name": "List[Dict] list_history(mapping_id: Optional[str] = None, vendor_id: Optional[str] = None)", "description": "Lists history records for a specific mapping or vendor, sorted by change time.", "scope": "", "scopeKind": ""}, {"name": "Dict _history_to_dict(doc: Dict)", "description": "Converts a history document to a dictionary for external use.", "scope": "", "scopeKind": ""}, {"name": "Tuple[Dict,List[Dict]] resolve_mapping(vendor_id: str, parameters: List[str], namespace: str = \"default\", values: Optional[Dict] = None)", "description": "Resolves output parameters for a vendor based on rules, applying optional transformations; returns resolved values and used rules.", "scope": "", "scopeKind": ""}, {"name": "_apply_transform(transform: Optional[str], value)", "description": "Applies simple predefined string transformations to values, such as converting to string or integer.", "scope": "", "scopeKind": ""}], "calls": ["get_db()", "find_one()", "find_one_and_update()", "delete_one()", "insert_one()", "sort()", " find()", "find_one()", "find_one_and_update()", "delete_many()", "insert_one()"], "search-terms": ["vendor management", "mapping operations", "mapping history", "mapping resolution", "MongoDB", "ODM", "service functions", "external database reference", "rules validation", "transform functions"], "state": 2, "file_id": 11, "knowledge_revision": 23, "git_revision": "", "ctags": [{"_type": "tag", "name": "_apply_transform", "path": "/home/kavia/workspace/code-generation/vendor-parameter-mapper-185-196/mapping_backend/app/services.py", "pattern": "/^def _apply_transform(transform: Optional[str], value):$/", "language": "Python", "kind": "function", "signature": "(transform: Optional[str], value)"}, {"_type": "tag", "name": "_history_to_dict", "path": "/home/kavia/workspace/code-generation/vendor-parameter-mapper-185-196/mapping_backend/app/services.py", "pattern": "/^def _history_to_dict(doc: Dict) -> Dict:$/", "language": "Python", "typeref": "typename:Dict", "kind": "function", "signature": "(doc: Dict)"}, {"_type": "tag", "name": "_mapping_to_dict", "path": "/home/kavia/workspace/code-generation/vendor-parameter-mapper-185-196/mapping_backend/app/services.py", "pattern": "/^def _mapping_to_dict(doc: Dict) -> Dict:$/", "language": "Python", "typeref": "typename:Dict", "kind": "function", "signature": "(doc: Dict)"}, {"_type": "tag", "name": "_oid", "path": "/home/kavia/workspace/code-generation/vendor-parameter-mapper-185-196/mapping_backend/app/services.py", "pattern": "/^def _oid(oid_str: str) -> ObjectId:$/", "language": "Python", "typeref": "typename:ObjectId", "kind": "function", "signature": "(oid_str: str)"}, {"_type": "tag", "name": "_record_history", "path": "/home/kavia/workspace/code-generation/vendor-parameter-mapper-185-196/mapping_backend/app/services.py", "pattern": "/^def _record_history(mapping_doc: Dict, change_type: str, db=None):$/", "language": "Python", "kind": "function", "signature": "(mapping_doc: Dict, change_type: str, db=None)"}, {"_type": "tag", "name": "_vendor_to_dict", "path": "/home/kavia/workspace/code-generation/vendor-parameter-mapper-185-196/mapping_backend/app/services.py", "pattern": "/^def _vendor_to_dict(doc: Dict) -> Dict:$/", "language": "Python", "typeref": "typename:Dict", "kind": "function", "signature": "(doc: Dict)"}, {"_type": "tag", "name": "create_mapping", "path": "/home/kavia/workspace/code-generation/vendor-parameter-mapper-185-196/mapping_backend/app/services.py", "pattern": "/^def create_mapping(data: Dict) -> Dict:$/", "language": "Python", "typeref": "typename:Dict", "kind": "function", "signature": "(data: Dict)"}, {"_type": "tag", "name": "create_vendor", "path": "/home/kavia/workspace/code-generation/vendor-parameter-mapper-185-196/mapping_backend/app/services.py", "pattern": "/^def create_vendor(data: Dict) -> Dict:$/", "language": "Python", "typeref": "typename:Dict", "kind": "function", "signature": "(data: Dict)"}, {"_type": "tag", "name": "delete_mapping", "path": "/home/kavia/workspace/code-generation/vendor-parameter-mapper-185-196/mapping_backend/app/services.py", "pattern": "/^def delete_mapping(mapping_id: str) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(mapping_id: str)"}, {"_type": "tag", "name": "delete_vendor", "path": "/home/kavia/workspace/code-generation/vendor-parameter-mapper-185-196/mapping_backend/app/services.py", "pattern": "/^def delete_vendor(vendor_id: str) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(vendor_id: str)"}, {"_type": "tag", "name": "get_mapping", "path": "/home/kavia/workspace/code-generation/vendor-parameter-mapper-185-196/mapping_backend/app/services.py", "pattern": "/^def get_mapping(mapping_id: str) -> Dict:$/", "language": "Python", "typeref": "typename:Dict", "kind": "function", "signature": "(mapping_id: str)"}, {"_type": "tag", "name": "get_vendor", "path": "/home/kavia/workspace/code-generation/vendor-parameter-mapper-185-196/mapping_backend/app/services.py", "pattern": "/^def get_vendor(vendor_id: str) -> Dict:$/", "language": "Python", "typeref": "typename:Dict", "kind": "function", "signature": "(vendor_id: str)"}, {"_type": "tag", "name": "list_history", "path": "/home/kavia/workspace/code-generation/vendor-parameter-mapper-185-196/mapping_backend/app/services.py", "pattern": "/^def list_history(mapping_id: Optional[str] = None, vendor_id: Optional[str] = None) -> List[Dict/", "language": "Python", "typeref": "typename:List[Dict]", "kind": "function", "signature": "(mapping_id: Optional[str] = None, vendor_id: Optional[str] = None)"}, {"_type": "tag", "name": "list_mappings", "path": "/home/kavia/workspace/code-generation/vendor-parameter-mapper-185-196/mapping_backend/app/services.py", "pattern": "/^def list_mappings(vendor_id: Optional[str] = None, namespace: Optional[str] = None) -> List[Dict/", "language": "Python", "typeref": "typename:List[Dict]", "kind": "function", "signature": "(vendor_id: Optional[str] = None, namespace: Optional[str] = None)"}, {"_type": "tag", "name": "list_vendors", "path": "/home/kavia/workspace/code-generation/vendor-parameter-mapper-185-196/mapping_backend/app/services.py", "pattern": "/^def list_vendors() -> List[Dict]:$/", "language": "Python", "typeref": "typename:List[Dict]", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "resolve_mapping", "path": "/home/kavia/workspace/code-generation/vendor-parameter-mapper-185-196/mapping_backend/app/services.py", "pattern": "/^def resolve_mapping(vendor_id: str, parameters: List[str], namespace: str = \"default\",$/", "language": "Python", "typeref": "typename:Tuple[Dict,List[Dict]]", "kind": "function", "signature": "(vendor_id: str, parameters: List[str], namespace: str = \"default\", values: Optional[Dict] = None)"}, {"_type": "tag", "name": "update_mapping", "path": "/home/kavia/workspace/code-generation/vendor-parameter-mapper-185-196/mapping_backend/app/services.py", "pattern": "/^def update_mapping(mapping_id: str, data: Dict) -> Dict:$/", "language": "Python", "typeref": "typename:Dict", "kind": "function", "signature": "(mapping_id: str, data: Dict)"}, {"_type": "tag", "name": "update_vendor", "path": "/home/kavia/workspace/code-generation/vendor-parameter-mapper-185-196/mapping_backend/app/services.py", "pattern": "/^def update_vendor(vendor_id: str, data: Dict) -> Dict:$/", "language": "Python", "typeref": "typename:Dict", "kind": "function", "signature": "(vendor_id: str, data: Dict)"}], "hash": "75aa9d4617891403e3b891793eca4a69", "format-version": 4, "code-base-name": "mapping_backend", "filename": "mapping_backend/app/services.py", "revision_history": [{"23": ""}]}